1. Регистрация/Вход
    Функционал: регистрация по почте и паролю, с подтверждением почты
    Реализация 1: JWT токен (Django Simple JWT)
    Реализация 2: OAuth (Недостатки, работал с ним только на PHP, поэтому могу долго разбираться с настройкой)



2. Домашний экран

    Функционал: доступ без аунтификации, отображение общей информации, 
    экран встречающий пользователя, есть возможность просмотреть ВСЕ страницы, в т.ч. и профиль и достижения
    В обоих случаях индивидуальная информация будет не заполнена и будет висеть предложение сначала зарегистрироваться

    
    Реализация: Тут вся реализация на фронте, запросы к API не делаются вообще, просто верстка, анимация и прочее

3. Испытания

    Функционал: 
        Неавторизованные: Видят всю страницу, но разблокирован только первый этап, можно его посмотреть, 
        почитать информацию первого этапа и пройти тест первого этапа, далее будет просится авторизация

        Авторизованные: Видят всю страницу, этапы разблокируются по ходу их прохождения, пользователю за прохождения этапов
        добавляются ачивки (медальки или что придумаем), в конце после прохождения всех тестов, думаю надо сделать какую-нибудь 
        ссылку на профиль, чтобы человек понимал, что там его ждет сертификат

    Реализация:
        Неавторизованные: Запрашиваем с API все тесты, смотрим авторизован ли человек, если нет, то блокируем все этапы 
        кроме первого, после прохождения первого этапа сохраняем его в local storage и если человек зарегестрируется, достаем
        результат и сохраняем в бд в профиле, таким образом, после регистрации у него сразу будет пройден первый этап
        и не надо будет проходить заново

        Авторизованные: Запрашиваем с API все тесты и отмечаем уже пройденные, если человек прошел все тесты, то отображаем ссылку 
        на профиль где говорим, что можно получить сертификат

4. Профиль

    Функционал: отображаются данные о пользователе из регистрации, можно выбрать аватар, либо самостоятельно загрузить картинку
    и окно с сертификатом, который сделаем тоже disabled пока не пройден весь курс, как только курс пройден, сертификат становится
    доступным для скачивания, скачивается в каком-то формате (надо придумать или исходить из библиотек) с написанным ФИО ребенка

    Реализация: Запрашиваем данные о пользователе с API выводим на страницу, сертификат - пользователь делает запрос на скачивание
    API берет шаблон, берет пользователя, достает его ФИО и пишет на шаблоне с помощью библиотеки Pillow


5. Достижения

    Функционал: Страница с отображением прогресса пользователя

    Реализация: Запрос к API на тесты пройденные пользователем, думаю реализовать так, картинка медальки или значка, 
    пока не получена будет прозрачной на несколько процентов (там уж как сделаешь на глаз), если  получена, 
    то прозрачность убирается

6 и 7. Для родителей и Для учителей

    Функционал: Отображение информации для взрослых

    Реализация: Просто верстка без запросов к API



Используемые инструменты:
    Бэк/API: Django Rest Framework
    Авторизация: Simple JWT
    db: PostgreSQL
    Фронт: React JS + Redux (думал попробовать на TypeScript, но если что можно и на JavaScript чтобы избежать лишних вопросов)
    

Надо сделать:

    Учитель:
    Пользователь:
        -добавление аватарки

    глобально по проекту:
        -подтверждение данных по почте

Сделано:
    Учитель:
        -просмотр отображения вопроса в конструкторе
        -создание кастомных тестов
        -Изменение кастомных тестов
        -удаление кастомных тестов
        -просмотр теста
        
        -отдельное отображение кастомных тестов
        -отдельно отображение общих тестов

        -cоздание классов
        -создание учеников в классы
        -открытие классам доступа к тесту 

        -просмотр реультатов учеников
        -фильтрация данных результатов

    Ученик:
        -Просмотр доступных тестов
        -Прохождение теста
        -Просмотр результатов прохождения тестов
        -фильтрация данных результатов по тестам

    Пользователь:
        -Сохранение данных тестов при регистрации
        -Сохранение данных тестов при авторизации
        -Открытие/закрытие доступа к этапам в зависимотси от прохождения этапов
        -прохождение этапов обучения
        -изменение данных профиля
        -получение сертификата





    глобально по проекту:
        -регистрация
        -авторизация по jwt токену
        -рефреш токена
        -открытие закрытие popup
        -возвращение на предыдущий открытый popup
        -адаптив



правки
    1. Фон текста в теории
    4. Сделать тестовый тест с разными типами вопроса
    5. 6 вопрос в тесте добавить ответ «все»
    6. 6 вопрос убрать ответ про забыть
    7. При регистрации не поменялись поля в профиле
    10. Объяснить Алисе про логику предоставления доступа
    11. Добавить правильный ответ в вопрос какие данные… в конкструкторе

с телефона адаптив
    1. отступы на всех фиолетовых формах
    2. нет текста в профиле после входа с пользователя
    3. почему не отображается текст в уителе профиле пока не нажму изменить 

    Логин: iziu95hm
    Пароль: @C(cdm18






Логин: 3q8z6x9u
Пароль: 8Ma9jv}h